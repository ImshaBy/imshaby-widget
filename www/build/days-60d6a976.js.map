{"file":"days-60d6a976.js","mappings":"MAAa,CAAC;IAKZ,OAAO,mBAAmB,CAAC,IAAY;QACrC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QAE7B,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;KACxB;IAED,OAAO,QAAQ;QACb,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAA;QAEtB,OAAO,KAAK,CAAA;KACb;IAED,OAAO,WAAW,CAAC,IAAY;QAC7B,IAAI,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAA;QAC/C,IAAI,KAAK,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,UAAU,CAAC,MAAM,EAAE,CAAC,CAAA;QAEpE,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAA;KACxB;IAED,OAAO,UAAU,CAAC,IAAY;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;QAElC,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;KAC7B;IAED,OAAO,WAAW,CAAC,KAAU;QAC3B,IAAI,KAAK,IAAI,CAAC,EAAE;YAAE,KAAK,GAAG,CAAC,CAAA;SAAE;QAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;KAC7B;IAED,OAAO,SAAS,CAAC,KAAK;QACpB,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAA;QACvB,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAChC,IAAI,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACrD,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;;QAEzC,OAAO,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;KAC1G;;AAxCe,cAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;AAClD,WAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;","names":[],"sources":["src/utils/days.ts"],"sourcesContent":["export class D {\r\n\r\n  static readonly standardDays = ['1', '2', '3', '4', '5', '6', '7']\r\n  static readonly daysNames = ['Нд', 'Пн', 'Ат', 'Ср', 'Чц', 'Пт', 'Сб']\r\n\r\n  static parseDateFromString(date: string): Date {\r\n    let dateTS = Date.parse(date)\r\n\r\n    return new Date(dateTS)\r\n  }\r\n\r\n  static getToday(): Date {\r\n    let today = new Date()\r\n\r\n    return today\r\n  }\r\n\r\n  static getDayIndex(date: string): string {\r\n    let dateObject = this.parseDateFromString(date)\r\n    let index = (dateObject.getDay() == 0) ? (7) : (dateObject.getDay())\r\n\r\n    return index.toString()\r\n  }\r\n\r\n  static getWeekDay(date: string): string {\r\n    let index = this.getDayIndex(date)\r\n\r\n    return this.daysNames[index]\r\n  }\r\n\r\n  static getWeekName(index: any): string {\r\n    if (index == 7) { index = 0 }\r\n    return this.daysNames[index]\r\n  }\r\n\r\n  static strToDate(dtStr): Date {\r\n    if (!dtStr) return null\r\n    let dateParts = dtStr.split(\"-\")\r\n    let timeParts = dateParts[2].split(\" \")[1].split(\":\")\r\n    dateParts[2] = dateParts[2].split(\" \")[0]\r\n    // month is 0-based, that's why we need dataParts[1] - 1\r\n    return new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0], timeParts[0], timeParts[1], timeParts[2])\r\n  }\r\n}\r\n"],"version":3}
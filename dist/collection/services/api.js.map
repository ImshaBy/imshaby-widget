{"version":3,"file":"api.js","sourceRoot":"","sources":["../../src/services/api.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAEpC,MAAM,OAAO,GAAG;IAMd,YAAa,KAAK;QAChB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA;QAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAA;IAC9B,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAAC,KAAK;QAEpC,MAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE,iCAAiC,CAAC,CAAC;QACvE,YAAY,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAC9C,YAAY,CAAC,MAAM,CAAC,qBAAqB,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QAE3D,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE;gBAC/C,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,YAAY;aACtB,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,oBAAoB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;YACzD,CAAC;YAED,IAAI,YAAY,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEzC,OAAO,YAAY,CAAC;QAEtB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAA;QAC7C,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,qBAAqB;QAEjC,MAAM,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,YAAY,CAAC,MAAM,CAAC,eAAe,EAAE,yQAAyQ,CAAC,CAAC;QAEhT,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,oBAAoB,EAAE;gBACvD,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,YAAY;gBACrB,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,oBAAoB,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;YACzD,CAAC;YAED,IAAI,CAAC,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACjE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEjD,OAAO,CAAC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAA;QAEhG,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAA;QACjD,CAAC;IACH,CAAC;CAEF","sourcesContent":["import { CONST } from './constants';\n\nexport class API {\n\n  scheduleInfo: any;\n  colorScheme: string;\n  colorSchemeHash: string;\n\n  constructor (props) {\n    this.getScheduleFromAPI(props)\n    this.getColorSchemeFromAPI()\n  }\n\n  private async getScheduleFromAPI(props) {\n\n    const fetchHeaders = new Headers();\n    fetchHeaders.append('Content-Type', 'application/json; charset=utf-8');\n    fetchHeaders.append('x-show-pending', 'true');\n    fetchHeaders.append('parish-week-api-key', props.parishId);\n\n    try {\n      const response = await fetch(CONST.API_MASS_URL, {\n        method: 'GET',\n        headers: fetchHeaders,\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n  \n      let scheduleInfo = await response.json();\n      \n      return scheduleInfo;\n\n    } catch (error) {\n      throw new Error(CONST.ERR_GETTING_SCHEDULE)\n    }\n  }\n\n  private async getColorSchemeFromAPI() {\n\n    const fetchHeaders = new Headers();\n    fetchHeaders.append('Authorization', 'Bearer f47d0be041da384c077ed5e2c6adee196300b159b78f0b3c720780274f5215c5d75de0028e72d6b83f4065bd336d79c5007a31d62a7191f6b412017b2387ef6a9a578cf560557a37933853598be638235a785380b768065b491bfa46b024a83ea354a30e999ff604fb6d148904bf42c4374084d0746d6f2163ee077daa05f04c');\n\n    try {\n      const response = await fetch(CONST.API_COLOR_SCHEME_URL, {\n        method: 'GET',\n        headers: fetchHeaders,\n        redirect: \"follow\",\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n  \n      let r = await response.json();\n      this.colorScheme = r.data.attributes.theme.data.attributes.color;\n      this.colorSchemeHash = this.colorScheme.slice(1);\n\n      return (this.colorScheme !== CONST.NULL && this.colorSchemeHash !== CONST.NULL) ? true : false\n\n    } catch (error) {\n      throw new Error(CONST.ERR_GETTING_COLOR_SCHEME)\n    }\n  }\n  \n}\n"]}